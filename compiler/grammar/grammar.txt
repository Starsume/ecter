program           ::= statement*

statement         ::= import_statement
                    | function_declaration
                    | variable_declaration
                    | class_declaration
                    | lambda_function
                    | main_function

import_statement  ::= "@import" "(" import_file ")" 

function_declaration ::= "function" function_signature block

function_signature ::= identifier "(" parameters ")" "->" return_type

parameters        ::= parameter ("," parameter)* | Îµ

parameter         ::= type identifier

return_type       ::= type | "void"

block             ::= "{" statement* "}"

variable_declaration ::= type variable_name ("=" value)?

class_declaration ::= class_modifier? "class" class_name ("extends" parent_class_name)? block

class_modifier    ::= "accessible" | "internal" | "abstract" | "protected"

type              ::= "int" | "long" | "decimal" | "string" | "float" | "bool" | "char" | "list" "<" type ">" 

value             ::= number | string_value | boolean_value | char_value

number            ::= [0-9]+

string_value      ::= "\"" characters "\""

boolean_value     ::= "true" | "false"

char_value        ::= "'" character "'"

lambda_function   ::= "function" lambda_signature "=>" type

lambda_signature  ::= "(" parameters ")"

main_function     ::= "function" "main" "(" ")" "->" "int" block

import_file       ::= identifier ( "." identifier )*

identifier        ::= [a-zA-Z_][a-zA-Z0-9_]*

characters        ::= [^\"]*

character         ::= [a-zA-Z0-9_]

class_name        ::= identifier

parent_class_name ::= identifier

variable_name     ::= identifier
